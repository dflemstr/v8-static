language: generic

sudo: true
dist: trusty

services:
  - docker

matrix:
  include:
    - os: linux
      env: >
        TARGET=x86_64-unknown-linux-gnu
        DOCKCROSS=dockcross/linux-x64
        GN_ARGS='target_os="linux" target_cpu="x64"'
    - os: linux
      env: >
        TARGET=x86_64-unknown-linux-musl
        DOCKCROSS=dockcross/linux-x64
        MUSL=x86_64-linux-musl
        GN_ARGS='target_os="linux" target_cpu="x64" custom_toolchain="//build/toolchain/linux:x64_musl" v8_snapshot_toolchain="//build/toolchain/linux:x64"'
    - os: linux
      env: >
        TARGET=i686-unknown-linux-gnu
        DOCKCROSS=dockcross/linux-x86
        GN_ARGS='target_os="linux" target_cpu="x86"'
    - os: linux
      env: >
        TARGET=i686-unknown-linux-musl
        DOCKCROSS=dockcross/linux-x86
        MUSL=x86_64-x32-linux-musl
        GN_ARGS='target_os="linux" target_cpu="x86" custom_toolchain="//build/toolchain/linux:x86_musl"'
    - os: linux
      env: >
        TARGET=armv7-unknown-linux-gnueabihf
        DOCKCROSS=dockcross/linux-armv7
        GN_ARGS='target_os="linux" target_cpu="arm" arm_version=7 arm_float_abi="hard"'
    - os: linux
      env: >
        TARGET=armv7-unknown-linux-musleabihf
        DOCKCROSS=dockcross/linux-armv7
        MUSL=arm-linux-musleabihf
        GN_ARGS='target_os="linux" target_cpu="arm" arm_version=7 arm_float_abi="hard" custom_toolchain="//build/toolchain/linux:arm_musl"'
    - os: osx
      osx_image: xcode8
      env: >
        TARGET=x86_64-apple-darwin
        GN_ARGS='target_os="mac" target_cpu="x64"'
    - os: osx
      osx_image: xcode8
      env: >
        TARGET=i686-apple-darwin
        GN_ARGS='target_os="mac" target_cpu="x86"'

install:
  - |
    if [ -n "$MUSL" ]
    then
      musl_archive="crossx86-$MUSL-1.1.12.tar.xz"
      wget "https://s3-eu-west-1.amazonaws.com/record-query/musl-cross-compilers/musl-1.1.12/$musl_archive"
      tar xaf "$musl_archive"
      mv "$MUSL" musl
    fi
  - |
    if [ -n "$DOCKCROSS" ]
    then
      docker run --rm "$DOCKCROSS" > ~/cross
    else
      echo -e '#!/bin/sh\nexec "$@"' > ~/cross
    fi
    chmod +x ~/cross

script:
  - set -e
  - if [ -n "$MUSL" ]; then export PATH="$PWD/musl/bin:$PATH"; fi
  - git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
  - export PATH=`pwd`/depot_tools:"$PATH"
  - fetch v8
  - cd v8
  - gclient sync --revision 5.6.222
  - cat ../extra.gn >> BUILD.gn
  - cat ../extra-toolchain-linux.gn >> build/toolchain/linux/BUILD.gn
  - gn gen out/build --args="is_component_build=false is_debug=false is_official_build=true optimize_for_size=true v8_use_snapshot=true v8_use_external_startup_data=false v8_enable_i18n_support=true is_clang=false use_sysroot=false $GN_ARGS"
  - cd ..
  - ~/cross ninja -C v8/out/build v8uber
  - mkdir v8-build
  - mkdir v8-build/include
  - mv v8/include/* "v8-build/include"
  - mkdir v8-build/lib
  - mv v8/out/build/obj/libv8uber.a v8-build/lib
  - tar -cvzf v8-build.tar.gz v8-build
  - export UPLOAD_DIR=upload/$TARGET/$(cd v8; git describe --always --tags)
  - mkdir -p "$UPLOAD_DIR"
  - mv v8-build.tar.gz "$UPLOAD_DIR"

deploy:
  - provider: s3
    access_key_id: AKIAJE27ZGMR45IXA6OA
    secret_access_key: ${S3_KEY}
    bucket: record-query
    region: eu-west-1
    skip_cleanup: true
    local_dir: upload
    upload-dir: v8
    on:
      repo: dflemstr/v8-static
